
MySQL
Exercise 3
1. Write a program containing a loop that iterates from 1 to 1000 using a variable I,
which is incremented each time around the loop. The program should output the
value of I every hundred iterations (i.e., the output should be 100, 200, etc.).

>	delimiter //
		create procedure xyz()
		begin
			declare x int default 0;
			while x < 1000 do
                set x = x + 100;
				insert into tempp values(x);
			end while;
		end; //
	delimiter ; 
    call xyz();

2. Write a program that examines all the numbers from 1 to 999, displaying all those
for which the sum of the cubes of the digits equal the number itself.

>	delimiter //
		create procedure armstrong()
		begin
			declare x int default 1;
			declare a int;
			while x <= 999 do
			    set a = x;
				while a > 0 do
				    declare r int default 0;
				    declare sum default 0;
					set r = mod(a,10);
					sum = sum + pow(a,3);
					set a = a / 10;
				end while;
				if sum = x then 
					insert into tempp values(concat(x,"is an armstrong number"));
				set x = x + 1;
			end while;
		end; //
	delimiter ; 



3. Write a program that Selects from any table a minimum and maximum value for a
radius, along with an increment factor, and generates a series of radii by repeatedly
adding the increment to the minimum until the maximum is reached. For each value
of the radius, compute and display the circumference, area, and volume of the
sphere. (Be sure to include both the maximum and the minimum values.).

>	delimiter //
    create procedure cir()
    begin
		declare mx int;
	    declare mn int;
	    declare i int;
	    select max(radius) into mx from circle;
	    select min(radius) into mn from circle;
	    select inc into i from circle where radius = 15;
	    while (mn <= mx) do
	        insert into tempp values(2 * 3.14 * mn,4 * 3.14 * pow(mn,2),(4/3) * 3.14 * pow(mn,3));
	        set mn = mn + i;
		end while;
	end; //
    delimiter ;


4. A palindrome is a word that is spelled the same forward and backward, such as
level, radar, etc. Write a program to Selects from any table a five letter word and
determine whether it is a palindrome.

>	delimiter //
	create procedure palindrome(x varchar(5))
	begin
		declare y int default 1;
		declare z int default 0;
		while(y <= floor(length(x)/2)) do
			if substr(x,y,1) = substr(x,-y,1) then
				set z = z + 1;
			end if;
			set y = y + 1;
        end while;
        if z = floor(length(x)/2) then
        	insert into tempp values("word is a palindrome");
        end if;
    end; //
    delimiter ;

5. Modify the above program to Select from any table a variable length word. This
requires determining how many characters are read in.

>	
